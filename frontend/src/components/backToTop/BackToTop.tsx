import React, { useState } from "react";
import "./backToTop.scss";

const BackToTop = () => {
  const [showScroll, setShowScroll] = useState(false);

  const checkScrollTop = () => {
    if (!showScroll && window.pageYOffset > 400) {
      setShowScroll(true);
    } else if (showScroll && window.pageYOffset <= 400) {
      setShowScroll(false);
    }
  };

  const scrollTop = () => {
    window.scrollTo({ top: 0, behavior: "smooth" });
  };

  window.addEventListener("scroll", checkScrollTop);

  return (
    <>
      <div className={showScroll ? "backToTop show" : "backToTop"} onClick={scrollTop}>
        <svg
          width="40"
          height="40"
          viewBox="0 0 40 40"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
        >
          <rect
            x="16.5884"
            y="2.86302"
            width="10.5556"
            height="32.3333"
            rx="5.27778"
            transform="rotate(20 16.5884 2.86302)"
            stroke="white"
          />
          <rect
            x="-0.298836"
            y="0.640856"
            width="10.5556"
            height="32.3333"
            rx="5.27778"
            transform="matrix(-0.939693 0.34202 0.34202 0.939693 22.5228 2.4453)"
            stroke="#FF8A00"
          />
          <rect
            x="34.5499"
            y="33.2642"
            width="11.4655"
            height="22.5124"
            rx="5.73273"
            transform="rotate(160 34.5499 33.2642)"
            fill="#FF8A00"
          />
          <path
            d="M20.3465 14.2952L20.4756 10.3959L19.2305 10.8491L19.157 10.647L20.6793 10.093L20.7374 10.2527L20.6096 14.1995L21.9956 13.695L22.0692 13.897L20.42 14.4973L20.3465 14.2952ZM23.8995 20.7386C23.5518 20.8651 23.2716 20.8554 23.0588 20.7094C22.848 20.5591 22.6776 20.3054 22.5477 19.9483L21.9423 18.285C21.8146 17.9342 21.7865 17.6376 21.8579 17.3952C21.9313 17.1486 22.1387 16.9631 22.4801 16.8389C22.8184 16.7157 23.0949 16.7251 23.3097 16.8668C23.5245 17.0086 23.6951 17.2533 23.8217 17.601L24.4288 19.2689C24.5587 19.626 24.5892 19.9289 24.52 20.1775C24.454 20.425 24.2472 20.612 23.8995 20.7386ZM23.8226 20.5272C24.0794 20.4337 24.2296 20.2957 24.2731 20.1131C24.3198 19.9294 24.2918 19.6966 24.1892 19.4147L23.5496 17.6575C23.447 17.3755 23.3193 17.1808 23.1667 17.0732C23.0171 16.9644 22.8139 16.9568 22.5571 17.0503C22.3002 17.1438 22.1479 17.2808 22.1001 17.4614C22.0555 17.6408 22.0844 17.8715 22.187 18.1534L22.8266 19.9106C22.9304 20.1956 23.0576 20.3941 23.2083 20.506C23.3609 20.6136 23.5657 20.6206 23.8226 20.5272ZM24.0298 23.7719L24.2319 23.6984L26.6937 26.4419L25.5239 23.2281L25.7495 23.1461L27.1347 26.9518L26.9326 27.0253L24.4691 24.2772L25.6405 27.4956L25.415 27.5777L24.0298 23.7719ZM26.4193 30.3515L27.7348 29.8727L27.8101 30.0794L26.7529 30.4642L27.3087 31.9912L28.1779 31.6748L28.2498 31.8722L27.3805 32.1885L27.9893 33.8612L29.0606 33.4713L29.1341 33.6733L27.8045 34.1573L26.4193 30.3515Z"
            fill="white"
            fillOpacity="0.9"
          />
        </svg>
      </div>
    </>
  );
};

export default BackToTop;
